//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputSystem/ProbeControlInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ProbeControlInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ProbeControlInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ProbeControlInputActions"",
    ""maps"": [
        {
            ""name"": ""ProbeControl"",
            ""id"": ""27e46042-936f-4091-bbe2-98179893bcff"",
            ""actions"": [
                {
                    ""name"": ""Slow"",
                    ""type"": ""Button"",
                    ""id"": ""d5c217a6-4870-42e2-997e-2f56b9c35372"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fast"",
                    ""type"": ""Button"",
                    ""id"": ""f4abaf7c-46ca-43df-a523-db00a45429c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Forward"",
                    ""type"": ""Button"",
                    ""id"": ""ae269d58-8b83-4760-8dc5-08f524f3be8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""e3522d4c-7695-499e-9240-26cacfff7f5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""7cfdfd9c-74bc-4ed0-a749-30d25b9c5034"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""156270ae-89cf-4751-86a3-5549955701fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""7f6aa8b5-8443-4acf-be5e-29d0a44daa2b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""d289768c-a87b-47cd-9460-86c7b0a22aee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DepthDown"",
                    ""type"": ""Button"",
                    ""id"": ""0a23ca8c-888e-48d3-aa1a-36db50ae7beb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DepthUp"",
                    ""type"": ""Button"",
                    ""id"": ""72f00851-cb0d-4140-a59a-55bda8a0ab91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PitchDown"",
                    ""type"": ""Button"",
                    ""id"": ""dbceae2b-b810-41a7-8b4a-4236cedb771e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PitchUp"",
                    ""type"": ""Button"",
                    ""id"": ""9daa6b9f-f6d0-40ec-998b-ef70c887cfe7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YawClockwise"",
                    ""type"": ""Button"",
                    ""id"": ""d691fb8c-2c1a-4523-9571-027b4796fbfb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YawCounter"",
                    ""type"": ""Button"",
                    ""id"": ""9a30d31d-e0de-4d23-aeb8-e22aea3bfa9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RollClock"",
                    ""type"": ""Button"",
                    ""id"": ""d173bbb3-ace5-4a51-a21c-883c919956f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RollCounter"",
                    ""type"": ""Button"",
                    ""id"": ""3e985262-0fc3-4454-a349-031a78a532b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FreezeAxes"",
                    ""type"": ""Button"",
                    ""id"": ""129ffede-ff7f-422a-a17f-54ff39441d90"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputControl"",
                    ""type"": ""Button"",
                    ""id"": ""67baab62-f6e3-4f44-8b8f-728531228528"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""46cb6612-43bd-4774-9301-5d4977e471f1"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""895a3a33-f52f-4484-a318-15392d6f8de4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ba599e6-115f-4b1c-b82e-6c3599413d3b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7d5a94b-0cea-4879-bafa-de74f1e1c04d"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78b2521b-6173-478b-8b4e-a89f1cb99745"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36cb3959-3b39-4a42-a92c-20857a4db672"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc81a62e-7843-4437-8a06-e684b9f85e5f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0d5f964-09bd-4d41-9082-8e6836947e2e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38b8cae0-d917-4c2f-af96-324dab19c904"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c30ec17e-287e-4fa7-b0db-83bdebe38013"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b82db7ea-ae9b-4ef6-afd2-e06564a7ed1c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecd3b859-d6ac-4d45-a5b5-848dceed959c"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91522472-3279-4026-8fc7-5604cbe2df27"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5cf77977-d1fc-4f7a-a1a7-a05110343953"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbbadd5a-0e93-4e47-9bf3-475d4eec4581"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f427774f-6cd6-4ded-859b-779451116d2b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f8e0716-3477-435b-ab46-0a85c62b527c"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DepthDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11cdf689-63c0-4935-bc8d-7c28c0e9facf"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DepthDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01a0f176-2ec8-4790-bc65-4a76c74e29ff"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DepthUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9ffcf2a-be5f-45e6-bfae-1028db5ddede"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DepthUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4f622e5-9feb-4cbf-b83a-e40581b49951"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5df13fa-9091-4f2d-aad7-288ae81fb682"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d39ffab4-6b84-42b8-8805-e90fff9a25a0"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b1a14bc-69f2-4030-a59b-908a728b5d86"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c87e363-6bc5-4274-bfee-578dfc272331"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YawClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03b3d4b5-2687-417d-9cdd-8386ac5ed855"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YawClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6642bc5-59a5-457c-b75d-7b2dc8b53be5"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YawCounter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""993121e9-5acd-4909-9ec1-7a444ebbe00e"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YawCounter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2fdffe7-9ca1-421a-918d-c87e68ad99ce"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollClock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48031b44-c61c-48ab-b6d8-16cfbd62ca25"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollCounter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""253233e6-d540-4141-be66-2de12291620e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreezeAxes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd3ad003-f3b0-4d1d-bb28-b92b4cdf86f2"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreezeAxes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7948e0bf-7954-49a6-9471-f2ae0569a98c"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""054fd9ae-c30e-40a7-ace8-ae8c663d9590"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ProbeControl
        m_ProbeControl = asset.FindActionMap("ProbeControl", throwIfNotFound: true);
        m_ProbeControl_Slow = m_ProbeControl.FindAction("Slow", throwIfNotFound: true);
        m_ProbeControl_Fast = m_ProbeControl.FindAction("Fast", throwIfNotFound: true);
        m_ProbeControl_Forward = m_ProbeControl.FindAction("Forward", throwIfNotFound: true);
        m_ProbeControl_Back = m_ProbeControl.FindAction("Back", throwIfNotFound: true);
        m_ProbeControl_Left = m_ProbeControl.FindAction("Left", throwIfNotFound: true);
        m_ProbeControl_Right = m_ProbeControl.FindAction("Right", throwIfNotFound: true);
        m_ProbeControl_Up = m_ProbeControl.FindAction("Up", throwIfNotFound: true);
        m_ProbeControl_Down = m_ProbeControl.FindAction("Down", throwIfNotFound: true);
        m_ProbeControl_DepthDown = m_ProbeControl.FindAction("DepthDown", throwIfNotFound: true);
        m_ProbeControl_DepthUp = m_ProbeControl.FindAction("DepthUp", throwIfNotFound: true);
        m_ProbeControl_PitchDown = m_ProbeControl.FindAction("PitchDown", throwIfNotFound: true);
        m_ProbeControl_PitchUp = m_ProbeControl.FindAction("PitchUp", throwIfNotFound: true);
        m_ProbeControl_YawClockwise = m_ProbeControl.FindAction("YawClockwise", throwIfNotFound: true);
        m_ProbeControl_YawCounter = m_ProbeControl.FindAction("YawCounter", throwIfNotFound: true);
        m_ProbeControl_RollClock = m_ProbeControl.FindAction("RollClock", throwIfNotFound: true);
        m_ProbeControl_RollCounter = m_ProbeControl.FindAction("RollCounter", throwIfNotFound: true);
        m_ProbeControl_FreezeAxes = m_ProbeControl.FindAction("FreezeAxes", throwIfNotFound: true);
        m_ProbeControl_InputControl = m_ProbeControl.FindAction("InputControl", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ProbeControl
    private readonly InputActionMap m_ProbeControl;
    private IProbeControlActions m_ProbeControlActionsCallbackInterface;
    private readonly InputAction m_ProbeControl_Slow;
    private readonly InputAction m_ProbeControl_Fast;
    private readonly InputAction m_ProbeControl_Forward;
    private readonly InputAction m_ProbeControl_Back;
    private readonly InputAction m_ProbeControl_Left;
    private readonly InputAction m_ProbeControl_Right;
    private readonly InputAction m_ProbeControl_Up;
    private readonly InputAction m_ProbeControl_Down;
    private readonly InputAction m_ProbeControl_DepthDown;
    private readonly InputAction m_ProbeControl_DepthUp;
    private readonly InputAction m_ProbeControl_PitchDown;
    private readonly InputAction m_ProbeControl_PitchUp;
    private readonly InputAction m_ProbeControl_YawClockwise;
    private readonly InputAction m_ProbeControl_YawCounter;
    private readonly InputAction m_ProbeControl_RollClock;
    private readonly InputAction m_ProbeControl_RollCounter;
    private readonly InputAction m_ProbeControl_FreezeAxes;
    private readonly InputAction m_ProbeControl_InputControl;
    public struct ProbeControlActions
    {
        private @ProbeControlInputActions m_Wrapper;
        public ProbeControlActions(@ProbeControlInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Slow => m_Wrapper.m_ProbeControl_Slow;
        public InputAction @Fast => m_Wrapper.m_ProbeControl_Fast;
        public InputAction @Forward => m_Wrapper.m_ProbeControl_Forward;
        public InputAction @Back => m_Wrapper.m_ProbeControl_Back;
        public InputAction @Left => m_Wrapper.m_ProbeControl_Left;
        public InputAction @Right => m_Wrapper.m_ProbeControl_Right;
        public InputAction @Up => m_Wrapper.m_ProbeControl_Up;
        public InputAction @Down => m_Wrapper.m_ProbeControl_Down;
        public InputAction @DepthDown => m_Wrapper.m_ProbeControl_DepthDown;
        public InputAction @DepthUp => m_Wrapper.m_ProbeControl_DepthUp;
        public InputAction @PitchDown => m_Wrapper.m_ProbeControl_PitchDown;
        public InputAction @PitchUp => m_Wrapper.m_ProbeControl_PitchUp;
        public InputAction @YawClockwise => m_Wrapper.m_ProbeControl_YawClockwise;
        public InputAction @YawCounter => m_Wrapper.m_ProbeControl_YawCounter;
        public InputAction @RollClock => m_Wrapper.m_ProbeControl_RollClock;
        public InputAction @RollCounter => m_Wrapper.m_ProbeControl_RollCounter;
        public InputAction @FreezeAxes => m_Wrapper.m_ProbeControl_FreezeAxes;
        public InputAction @InputControl => m_Wrapper.m_ProbeControl_InputControl;
        public InputActionMap Get() { return m_Wrapper.m_ProbeControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ProbeControlActions set) { return set.Get(); }
        public void SetCallbacks(IProbeControlActions instance)
        {
            if (m_Wrapper.m_ProbeControlActionsCallbackInterface != null)
            {
                @Slow.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnSlow;
                @Slow.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnSlow;
                @Slow.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnSlow;
                @Fast.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnFast;
                @Fast.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnFast;
                @Fast.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnFast;
                @Forward.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnForward;
                @Forward.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnForward;
                @Forward.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnForward;
                @Back.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnBack;
                @Left.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRight;
                @Up.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDown;
                @DepthDown.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDepthDown;
                @DepthDown.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDepthDown;
                @DepthDown.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDepthDown;
                @DepthUp.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDepthUp;
                @DepthUp.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDepthUp;
                @DepthUp.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnDepthUp;
                @PitchDown.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnPitchDown;
                @PitchDown.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnPitchDown;
                @PitchDown.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnPitchDown;
                @PitchUp.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnPitchUp;
                @PitchUp.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnPitchUp;
                @PitchUp.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnPitchUp;
                @YawClockwise.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnYawClockwise;
                @YawClockwise.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnYawClockwise;
                @YawClockwise.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnYawClockwise;
                @YawCounter.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnYawCounter;
                @YawCounter.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnYawCounter;
                @YawCounter.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnYawCounter;
                @RollClock.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRollClock;
                @RollClock.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRollClock;
                @RollClock.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRollClock;
                @RollCounter.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRollCounter;
                @RollCounter.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRollCounter;
                @RollCounter.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnRollCounter;
                @FreezeAxes.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnFreezeAxes;
                @FreezeAxes.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnFreezeAxes;
                @FreezeAxes.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnFreezeAxes;
                @InputControl.started -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnInputControl;
                @InputControl.performed -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnInputControl;
                @InputControl.canceled -= m_Wrapper.m_ProbeControlActionsCallbackInterface.OnInputControl;
            }
            m_Wrapper.m_ProbeControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Slow.started += instance.OnSlow;
                @Slow.performed += instance.OnSlow;
                @Slow.canceled += instance.OnSlow;
                @Fast.started += instance.OnFast;
                @Fast.performed += instance.OnFast;
                @Fast.canceled += instance.OnFast;
                @Forward.started += instance.OnForward;
                @Forward.performed += instance.OnForward;
                @Forward.canceled += instance.OnForward;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @DepthDown.started += instance.OnDepthDown;
                @DepthDown.performed += instance.OnDepthDown;
                @DepthDown.canceled += instance.OnDepthDown;
                @DepthUp.started += instance.OnDepthUp;
                @DepthUp.performed += instance.OnDepthUp;
                @DepthUp.canceled += instance.OnDepthUp;
                @PitchDown.started += instance.OnPitchDown;
                @PitchDown.performed += instance.OnPitchDown;
                @PitchDown.canceled += instance.OnPitchDown;
                @PitchUp.started += instance.OnPitchUp;
                @PitchUp.performed += instance.OnPitchUp;
                @PitchUp.canceled += instance.OnPitchUp;
                @YawClockwise.started += instance.OnYawClockwise;
                @YawClockwise.performed += instance.OnYawClockwise;
                @YawClockwise.canceled += instance.OnYawClockwise;
                @YawCounter.started += instance.OnYawCounter;
                @YawCounter.performed += instance.OnYawCounter;
                @YawCounter.canceled += instance.OnYawCounter;
                @RollClock.started += instance.OnRollClock;
                @RollClock.performed += instance.OnRollClock;
                @RollClock.canceled += instance.OnRollClock;
                @RollCounter.started += instance.OnRollCounter;
                @RollCounter.performed += instance.OnRollCounter;
                @RollCounter.canceled += instance.OnRollCounter;
                @FreezeAxes.started += instance.OnFreezeAxes;
                @FreezeAxes.performed += instance.OnFreezeAxes;
                @FreezeAxes.canceled += instance.OnFreezeAxes;
                @InputControl.started += instance.OnInputControl;
                @InputControl.performed += instance.OnInputControl;
                @InputControl.canceled += instance.OnInputControl;
            }
        }
    }
    public ProbeControlActions @ProbeControl => new ProbeControlActions(this);
    public interface IProbeControlActions
    {
        void OnSlow(InputAction.CallbackContext context);
        void OnFast(InputAction.CallbackContext context);
        void OnForward(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnDepthDown(InputAction.CallbackContext context);
        void OnDepthUp(InputAction.CallbackContext context);
        void OnPitchDown(InputAction.CallbackContext context);
        void OnPitchUp(InputAction.CallbackContext context);
        void OnYawClockwise(InputAction.CallbackContext context);
        void OnYawCounter(InputAction.CallbackContext context);
        void OnRollClock(InputAction.CallbackContext context);
        void OnRollCounter(InputAction.CallbackContext context);
        void OnFreezeAxes(InputAction.CallbackContext context);
        void OnInputControl(InputAction.CallbackContext context);
    }
}
